{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\src\\\\containers\\\\Inventory\\\\Inventory.js\";\nimport React, { Component } from 'react';\nimport { Row, Panel, Col } from 'react-bootstrap';\nimport DataGrid from '../../components/Table/DataGrid/DataGrid';\nimport PieChart from '../../components/Charts/PieChart';\nimport ManufacturerColumns from '../../components/Table/GridColumns/ManufacturerColumn';\nimport InventoryColumns from '../../components/Table/GridColumns/InventoryColumns';\nimport EmptyRow from '../../components/Table/GridRows/GridRow';\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inventory, _Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      manufacturerData: [{\n        manufacturer: 'Apple',\n        name: 'Steve Job',\n        phone: '123-456-7890',\n        email: '123@gmail.com',\n        address: '123th St New York NY 10012'\n      }, {\n        manufacturer: 'Apple',\n        name: 'Steve Job',\n        phone: '123-456-7890',\n        email: '123@gmail.com',\n        address: '123th St New York NY 10012'\n      }, {\n        manufacturer: 'Apple',\n        name: 'Steve Job',\n        phone: '123-456-7890',\n        email: '123@gmail.com',\n        address: '123th St New York NY 10012'\n      }],\n      inventoryData: [{\n        product: 'iPhone Xs',\n        quantity: 10,\n        price: 1300,\n        category: 'electronic',\n        model: '128gb',\n        type: '',\n        color: 'gold',\n        condition: 'new',\n        manufacturer: 'Apple',\n        cost: 1200,\n        totalCost: 1200\n      }, {\n        product: 'iPhone Xs',\n        quantity: 10,\n        price: 1300,\n        category: 'electronic',\n        model: '128gb',\n        type: '',\n        color: 'gold',\n        condition: 'new',\n        manufacturer: 'Apple',\n        cost: 1200,\n        totalCost: 1200\n      }, {\n        product: 'iPhone Xs',\n        quantity: 10,\n        price: 1300,\n        category: 'electronic',\n        model: '128gb',\n        type: '',\n        color: 'gold',\n        condition: 'new',\n        manufacturer: 'Apple',\n        cost: 1200,\n        totalCost: 1200\n      }, {\n        product: 'LED Bulb',\n        quantity: 10,\n        price: 9.99,\n        category: 'home',\n        model: '100 Watt',\n        type: 'LED',\n        color: 'Warm White',\n        condition: 'new',\n        manufacturer: 'Mr.LED',\n        cost: 2,\n        totalCost: 2.25\n      }]\n    };\n\n    _this.onManufacturerRenderEditableCellHandler = function (cellInfo) {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: function onBlur(e) {\n          var data = _toConsumableArray(_this.state.manufacturerData);\n\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n          _this.setState({\n            manufacturerData: _toConsumableArray(data)\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: _this.state.manufacturerData[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    };\n\n    _this.onInventoryRenderEditableCellHandler = function (cellInfo) {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: function onBlur(e) {\n          var data = _toConsumableArray(_this.state.inventoryData);\n\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n          _this.setState({\n            data: data\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: _this.state.inventoryData[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 8,\n        lg: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(DataGrid, {\n        data: this.state.manufacturerData,\n        title: \"Manufacturer\",\n        clicked: function clicked() {\n          return _this2.onSaveDataGridHandler();\n        },\n        columns: ManufacturerColumns(this.onManufacturerRenderEditableCellHandler),\n        emptyRow: EmptyRow('MANUFACTURER'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(PieChart, {\n        bsStyle: \"primary\",\n        heading: \"Category\",\n        width: 800,\n        height: 400,\n        cx: 300,\n        cy: 200,\n        outerRadius: 200,\n        fill: \"#8884d8\",\n        displayKey: \"category\",\n        displayValue: \"quantity\",\n        displayData: this.state.inventoryData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(DataGrid, {\n        data: this.state.inventoryData,\n        title: \"Inventory\",\n        columns: InventoryColumns(this.onInventoryRenderEditableCellHandler),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Inventory;\n}(Component);\n\nexport default Inventory;","map":{"version":3,"sources":["C:\\Users\\issac\\Documents\\React\\simple-dashboard\\src\\containers\\Inventory\\Inventory.js"],"names":["React","Component","Row","Panel","Col","DataGrid","PieChart","ManufacturerColumns","InventoryColumns","EmptyRow","Inventory","state","manufacturerData","manufacturer","name","phone","email","address","inventoryData","product","quantity","price","category","model","type","color","condition","cost","totalCost","onManufacturerRenderEditableCellHandler","cellInfo","backgroundColor","e","data","index","column","id","target","innerHTML","setState","__html","onInventoryRenderEditableCellHandler","onSaveDataGridHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Row, Panel, Col } from 'react-bootstrap';\r\n\r\nimport DataGrid from '../../components/Table/DataGrid/DataGrid';\r\nimport PieChart from '../../components/Charts/PieChart';\r\nimport ManufacturerColumns from '../../components/Table/GridColumns/ManufacturerColumn';\r\nimport InventoryColumns from '../../components/Table/GridColumns/InventoryColumns';\r\nimport EmptyRow from '../../components/Table/GridRows/GridRow';\r\n\r\nclass Inventory extends Component {\r\n\r\n    state = {\r\n        manufacturerData: \r\n        [\r\n            {\r\n                manufacturer: 'Apple',\r\n                name: 'Steve Job',\r\n                phone: '123-456-7890',\r\n                email: '123@gmail.com',\r\n                address: '123th St New York NY 10012'\r\n            },\r\n            {\r\n                manufacturer: 'Apple',\r\n                name: 'Steve Job',\r\n                phone: '123-456-7890',\r\n                email: '123@gmail.com',\r\n                address: '123th St New York NY 10012'\r\n            },\r\n            {\r\n                manufacturer: 'Apple',\r\n                name: 'Steve Job',\r\n                phone: '123-456-7890',\r\n                email: '123@gmail.com',\r\n                address: '123th St New York NY 10012'\r\n            }\r\n        ],\r\n\r\n        inventoryData:\r\n        [\r\n            {\r\n                product: 'iPhone Xs',\r\n                quantity: 10,\r\n                price: 1300,\r\n                category: 'electronic',\r\n                model: '128gb',\r\n                type: '',\r\n                color: 'gold',\r\n                condition: 'new',\r\n                manufacturer: 'Apple',\r\n                cost: 1200,\r\n                totalCost: 1200\r\n            },\r\n            {\r\n                product: 'iPhone Xs',\r\n                quantity: 10,\r\n                price: 1300,\r\n                category: 'electronic',\r\n                model: '128gb',\r\n                type: '',\r\n                color: 'gold',\r\n                condition: 'new',\r\n                manufacturer: 'Apple',\r\n                cost: 1200,\r\n                totalCost: 1200\r\n            },\r\n            {\r\n                product: 'iPhone Xs',\r\n                quantity: 10,\r\n                price: 1300,\r\n                category: 'electronic',\r\n                model: '128gb',\r\n                type: '',\r\n                color: 'gold',\r\n                condition: 'new',\r\n                manufacturer: 'Apple',\r\n                cost: 1200,\r\n                totalCost: 1200\r\n            },\r\n            {\r\n                product: 'LED Bulb',\r\n                quantity: 10,\r\n                price: 9.99,\r\n                category: 'home',\r\n                model: '100 Watt',\r\n                type: 'LED',\r\n                color: 'Warm White',\r\n                condition: 'new',\r\n                manufacturer: 'Mr.LED',\r\n                cost: 2,\r\n                totalCost: 2.25\r\n            },\r\n        ]\r\n    };\r\n\r\n    onManufacturerRenderEditableCellHandler = (cellInfo) =>{\r\n        return (\r\n            <div\r\n                style={{ backgroundColor: \"#fafafa\" }}\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={e => {\r\n                    const data = [...this.state.manufacturerData];\r\n                    data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n                    this.setState({ manufacturerData: [...data] });\r\n                }}                \r\n                dangerouslySetInnerHTML={{\r\n                    __html: this.state.manufacturerData[cellInfo.index][cellInfo.column.id]\r\n                }}\r\n          />\r\n        )\r\n    };\r\n\r\n    onInventoryRenderEditableCellHandler = (cellInfo) =>{\r\n        return (\r\n            <div\r\n                style={{ backgroundColor: \"#fafafa\" }}\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={e => {\r\n                    const data = [...this.state.inventoryData];\r\n                    data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n                    this.setState({ data });\r\n                }}\r\n                dangerouslySetInnerHTML={{\r\n                    __html: this.state.inventoryData[cellInfo.index][cellInfo.column.id]\r\n                }}\r\n          />\r\n        )\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Row>\r\n                {/* <Panel bsStyle='danger' defaultExpanded>\r\n                    <Panel.Heading>\r\n                        Stock Alert\r\n                    </Panel.Heading>\r\n                    <Panel.Collapse>\r\n                        <Panel.Body>\r\n                        <ul>\r\n                            <li>alert 1</li>\r\n                            <li>alert 2</li>\r\n                            <li>alert 3</li>\r\n                            <li>alert 4</li>\r\n                        </ul>\r\n                        </Panel.Body>\r\n                    </Panel.Collapse>\r\n                </Panel> */}\r\n            </Row>\r\n            \r\n            <Row>\r\n                <Col md={8} lg={8}>\r\n                    <DataGrid \r\n                        data={this.state.manufacturerData} \r\n                        title='Manufacturer'\r\n                        clicked={() => this.onSaveDataGridHandler()}\r\n                        columns={ManufacturerColumns(this.onManufacturerRenderEditableCellHandler)}\r\n                        emptyRow={EmptyRow('MANUFACTURER')}\r\n                    />\r\n                </Col>\r\n\r\n                <Col md={4} lg={4}>\r\n                    <PieChart \r\n                        bsStyle='primary'\r\n                        heading='Category'\r\n                        width={800}\r\n                        height={400}\r\n                        cx={300}\r\n                        cy={200}\r\n                        outerRadius={200}\r\n                        fill='#8884d8'\r\n                        displayKey='category'\r\n                        displayValue='quantity'\r\n                        displayData={this.state.inventoryData}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <DataGrid data={this.state.inventoryData} \r\n                    title='Inventory'\r\n                    columns={InventoryColumns(this.onInventoryRenderEditableCellHandler)}\r\n                />\r\n            </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}