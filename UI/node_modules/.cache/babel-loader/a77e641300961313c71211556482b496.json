{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\src\\\\containers\\\\Overview\\\\Overview.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/overview';\nimport axios from '../../axios/AxiosConfig';\nimport Card from '../../components/Card/Card';\nimport { Row, Col, Panel } from 'react-bootstrap';\nimport BarChart from '../../components/Charts/BarChart';\nimport ComposedChart from '../../components/Charts/ComposedChart';\nimport PieChart from '../../components/Charts/PieChart';\nimport DataGrid from '../../components/Table/DataGrid/DataGrid';\nimport salesTrackerColumns from '../../components/Table/GridColumns/SalesTrackerColumns';\n\nvar Overview =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Overview, _Component);\n\n  function Overview() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Overview);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Overview)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      salesData: []\n    };\n\n    _this.onSalesRenderEditableCellHandler = function (cellInfo) {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: function onBlur(e) {\n          var data = _toConsumableArray(_this.state.salesData);\n\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n          _this.setState({\n            data: data\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: _this.state.salesData[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Overview, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchOverviewData(); //     const sales = [{\n      //         dateSold: '2/2/2019',\n      //         itemName: 'iPhone Xs',\n      //         quantity: 1,\n      //         soldPrice: 1500,\n      //         shippingCharged: 0,\n      //         shippingAndHandlingFee: 25,\n      //         ebayFee: 120,\n      //         paypalFee: 100,\n      //         otherFee: 0,\n      //         costPerItem: 1200,\n      //         totalCost: 1420,\n      //         netProfit: 80\n      //     },\n      //     {\n      //         dateSold: '2/2/2019',\n      //         itemName: 'iPhone Xs',\n      //         quantity: 1,\n      //         soldPrice: 1500,\n      //         shippingCharged: 0,\n      //         shippingAndHandlingFee: 25,\n      //         ebayFee: 120,\n      //         paypalFee: 100,\n      //         otherFee: 0,\n      //         costPerItem: 1200,\n      //         totalCost: 1420,\n      //         netProfit: 80\n      //     }\n      // ]\n      // axios.post('/sales.json', sales)\n      //     .then(res => console.log(res))\n      //     .catch(err => console.log(err));\n\n      this.setState({\n        salesData: _toConsumableArray(this.props.overviewData)\n      });\n      console.log(this.props.overviewData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state.salesData)\n      // console.log(this.props.overviewData)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"show-grid text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"SALES: $71365.98\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Card, {\n        title: \"RENVENUE: $45265.28\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Card, {\n        title: \"ORDER: 64031\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Card, {\n        title: \"RETURN: 235\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(Row, {\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(ComposedChart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 8,\n        lg: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        width: 600,\n        height: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(DataGrid, {\n        data: this.state.salesData,\n        columns: salesTrackerColumns(this.onSalesRenderEditableCellHandler),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Overview;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    overviewData: state.overview.overviewData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchOverviewData: function onFetchOverviewData() {\n      return dispatch(actions.fetchOverviewData());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);","map":{"version":3,"sources":["C:\\Users\\issac\\Documents\\React\\simple-dashboard\\src\\containers\\Overview\\Overview.js"],"names":["React","Component","connect","actions","axios","Card","Row","Col","Panel","BarChart","ComposedChart","PieChart","DataGrid","salesTrackerColumns","Overview","state","salesData","onSalesRenderEditableCellHandler","cellInfo","backgroundColor","e","data","index","column","id","target","innerHTML","setState","__html","props","onFetchOverviewData","overviewData","console","log","mapStateToProps","overview","mapDispatchToProps","dispatch","fetchOverviewData"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,QAAgC,iBAAhC;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,mBAAP,MAAgC,wDAAhC;;IAEMC,Q;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE;AADP,K;;UA2CRC,gC,GAAmC,UAACC,QAAD,EAAa;AAC5C,aACI;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SADX;AAEI,QAAA,eAAe,MAFnB;AAGI,QAAA,8BAA8B,MAHlC;AAII,QAAA,MAAM,EAAE,gBAAAC,CAAC,EAAI;AACT,cAAMC,IAAI,sBAAO,MAAKN,KAAL,CAAWC,SAAlB,CAAV;;AACAK,UAAAA,IAAI,CAACH,QAAQ,CAACI,KAAV,CAAJ,CAAqBJ,QAAQ,CAACK,MAAT,CAAgBC,EAArC,IAA2CJ,CAAC,CAACK,MAAF,CAASC,SAApD;;AACA,gBAAKC,QAAL,CAAc;AAAEN,YAAAA,IAAI,EAAJA;AAAF,WAAd;AACH,SARL;AASI,QAAA,uBAAuB,EAAE;AACrBO,UAAAA,MAAM,EAAE,MAAKb,KAAL,CAAWC,SAAX,CAAqBE,QAAQ,CAACI,KAA9B,EAAqCJ,QAAQ,CAACK,MAAT,CAAgBC,EAArD;AADa,SAT7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAeH,K;;;;;;;wCAvDmB;AAChB,WAAKK,KAAL,CAAWC,mBAAX,GADgB,CAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;AACA;AACA;;AACA,WAAKH,QAAL,CAAc;AAACX,QAAAA,SAAS,qBAAM,KAAKa,KAAL,CAAWE,YAAjB;AAAV,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWE,YAAvB;AACH;;;6BAoBO;AACJ;AACA;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ,EAOI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPJ,EAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AACI,QAAA,KAAK,EAAE,GADX;AAEI,QAAA,MAAM,EAAE,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAOI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CAVJ,EA6BI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AACI,QAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWC,SADrB;AAEI,QAAA,OAAO,EAAEH,mBAAmB,CAAC,KAAKI,gCAAN,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CA7BJ,CADJ;AAqCH;;;;EAvGkBhB,S;;AA0GvB,IAAMiC,eAAe,GAAG,SAAlBA,eAAkB,CAAAnB,KAAK,EAAI;AAC7B,SAAO;AACHgB,IAAAA,YAAY,EAAEhB,KAAK,CAACoB,QAAN,CAAeJ;AAD1B,GAAP;AAGH,CAJD;;AAMA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHP,IAAAA,mBAAmB,EAAE;AAAA,aAAMO,QAAQ,CAAClC,OAAO,CAACmC,iBAAR,EAAD,CAAd;AAAA;AADlB,GAAP;AAGH,CAJD;;AAMA,eAAepC,OAAO,CAACgC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/overview'\r\nimport axios from '../../axios/AxiosConfig';\r\nimport Card from '../../components/Card/Card';\r\nimport { Row, Col, Panel } from 'react-bootstrap';\r\n\r\nimport BarChart from '../../components/Charts/BarChart';\r\nimport ComposedChart from '../../components/Charts/ComposedChart';\r\nimport PieChart from '../../components/Charts/PieChart';\r\nimport DataGrid from '../../components/Table/DataGrid/DataGrid';\r\nimport salesTrackerColumns from '../../components/Table/GridColumns/SalesTrackerColumns';\r\n\r\nclass Overview extends Component {\r\n\r\n    state = {\r\n        salesData: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOverviewData();\r\n    //     const sales = [{\r\n    //         dateSold: '2/2/2019',\r\n    //         itemName: 'iPhone Xs',\r\n    //         quantity: 1,\r\n    //         soldPrice: 1500,\r\n    //         shippingCharged: 0,\r\n    //         shippingAndHandlingFee: 25,\r\n    //         ebayFee: 120,\r\n    //         paypalFee: 100,\r\n    //         otherFee: 0,\r\n    //         costPerItem: 1200,\r\n    //         totalCost: 1420,\r\n    //         netProfit: 80\r\n    //     },\r\n    //     {\r\n    //         dateSold: '2/2/2019',\r\n    //         itemName: 'iPhone Xs',\r\n    //         quantity: 1,\r\n    //         soldPrice: 1500,\r\n    //         shippingCharged: 0,\r\n    //         shippingAndHandlingFee: 25,\r\n    //         ebayFee: 120,\r\n    //         paypalFee: 100,\r\n    //         otherFee: 0,\r\n    //         costPerItem: 1200,\r\n    //         totalCost: 1420,\r\n    //         netProfit: 80\r\n    //     }\r\n    // ]\r\n\r\n        // axios.post('/sales.json', sales)\r\n        //     .then(res => console.log(res))\r\n        //     .catch(err => console.log(err));\r\n        this.setState({salesData: [...this.props.overviewData]})\r\n        console.log(this.props.overviewData)\r\n    }\r\n\r\n    onSalesRenderEditableCellHandler = (cellInfo) =>{\r\n        return (\r\n            <div\r\n                style={{ backgroundColor: \"#fafafa\" }}\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={e => {\r\n                    const data = [...this.state.salesData];\r\n                    data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n                    this.setState({ data });\r\n                }}\r\n                dangerouslySetInnerHTML={{\r\n                    __html: this.state.salesData[cellInfo.index][cellInfo.column.id]\r\n                }}\r\n          />\r\n        );\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.state.salesData)\r\n        // console.log(this.props.overviewData)\r\n        return(\r\n            <div>\r\n                <Row className=\"show-grid text-center\">\r\n                    <Card title='SALES: $71365.98' />\r\n                    <Card title='RENVENUE: $45265.28' />\r\n                    <Card title='ORDER: 64031' />\r\n                    <Card title='RETURN: 235' />\r\n                </Row>\r\n                <Row md={12} lg={12}>\r\n                    <ComposedChart />\r\n                </Row>\r\n                <Row>\r\n                    <Col md={8} lg={8}>\r\n                        <BarChart \r\n                            width={600}\r\n                            height={300}\r\n                        />\r\n                    </Col>\r\n                    <Col md={4} lg={4}>\r\n                        {/* <PieChart \r\n                            bsStyle='primary'\r\n                            width={800}\r\n                            height={400}\r\n                            cx={300}\r\n                            cy={200}\r\n                            outerRadius={200}\r\n                            fill='#8884d8'\r\n                        /> */}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <DataGrid \r\n                        data={this.state.salesData}\r\n                        columns={salesTrackerColumns(this.onSalesRenderEditableCellHandler)}/>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        overviewData: state.overview.overviewData\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOverviewData: () => dispatch(actions.fetchOverviewData())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);"]},"metadata":{},"sourceType":"module"}