{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\src\\\\containers\\\\Charts\\\\BarChart.js\";\nimport React, { Component } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Cell, CartesianGrid, Tooltip, Legend } from 'recharts';\nvar data = [{\n  \"AnswerRef\": \"one\",\n  \"Text\": \"5 out of 50 throws\",\n  \"Score\": 0,\n  \"RespondentPercentage\": 12,\n  \"Rank\": 1\n}, {\n  \"AnswerRef\": \"two\",\n  \"Text\": \"25 out of 50 throws\",\n  \"Score\": 0,\n  \"RespondentPercentage\": 32,\n  \"Rank\": 2\n}, {\n  \"AnswerRef\": \"three\",\n  \"Text\": \"30 out of 50 throws\",\n  \"Score\": 1,\n  \"RespondentPercentage\": 41,\n  \"Rank\": 3\n}, {\n  \"AnswerRef\": \"four\",\n  \"Text\": \"None of the above\",\n  \"Score\": 0,\n  \"RespondentPercentage\": 16,\n  \"Rank\": 4\n}];\n\nvar BarCharts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BarCharts, _Component);\n\n  function BarCharts() {\n    _classCallCheck(this, BarCharts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BarCharts).apply(this, arguments));\n  }\n\n  _createClass(BarCharts, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          x = _this$props.x,\n          y = _this$props.y,\n          fill = _this$props.fill,\n          value = _this$props.value;\n      return React.createElement(\"text\", {\n        x: x,\n        y: y,\n        dy: -4,\n        fontSize: \"16\",\n        fontFamily: \"sans-serif\",\n        fill: fill,\n        textAnchor: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, value, \"%\");\n    }\n  }]);\n\n  return BarCharts;\n}(Component);\n\n;\nvar SimpleBarChart = React.createClass({\n  displayName: \"SimpleBarChart\",\n  render: function render() {\n    return React.createElement(BarChart, {\n      width: 900,\n      height: 260,\n      data: data,\n      margin: {\n        top: 5,\n        right: 0,\n        left: 0,\n        bottom: 25\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(XAxis, {\n      dataKey: \"Text\",\n      fontFamily: \"sans-serif\",\n      tickSize: true,\n      dy: \"25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      hide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      vertical: false,\n      stroke: \"#ebf3f0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"RespondentPercentage\",\n      barSize: 170,\n      fontFamily: \"sans-serif\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, data.map(function (entry, index) {\n      return React.createElement(Cell, {\n        fill: data[index].AnswerRef === \"three\" ? '#61bf93' : '#ededed',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    })));\n  }\n});\nexport default BarCharts;","map":{"version":3,"sources":["C:\\Users\\issac\\Documents\\React\\simple-dashboard\\src\\containers\\Charts\\BarChart.js"],"names":["React","Component","BarChart","Bar","XAxis","YAxis","Cell","CartesianGrid","Tooltip","Legend","data","BarCharts","props","x","y","fill","value","SimpleBarChart","createClass","render","top","right","left","bottom","map","entry","index","AnswerRef"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport {\r\n    BarChart, \r\n    Bar, \r\n    XAxis, \r\n    YAxis, \r\n    Cell, \r\n    CartesianGrid, \r\n    Tooltip, \r\n    Legend\r\n} from 'recharts';\r\n\r\nconst data = [\r\n    {\r\n      \"AnswerRef\": \"one\",\r\n      \"Text\": \"5 out of 50 throws\",\r\n      \"Score\": 0,\r\n      \"RespondentPercentage\": 12,\r\n      \"Rank\": 1\r\n    },\r\n    {\r\n      \"AnswerRef\": \"two\",\r\n      \"Text\": \"25 out of 50 throws\",\r\n      \"Score\": 0,\r\n      \"RespondentPercentage\": 32,\r\n      \"Rank\": 2\r\n    },\r\n    {\r\n      \"AnswerRef\": \"three\",\r\n      \"Text\": \"30 out of 50 throws\",\r\n      \"Score\": 1,\r\n      \"RespondentPercentage\": 41,\r\n      \"Rank\": 3\r\n    },\r\n    {\r\n      \"AnswerRef\": \"four\",\r\n      \"Text\": \"None of the above\",\r\n      \"Score\": 0,\r\n      \"RespondentPercentage\": 16,\r\n      \"Rank\": 4\r\n    }\r\n];\r\n\r\nclass BarCharts extends Component {\r\n    render () {\r\n        const {x, y, fill, value} = this.props;\r\n           return <text \r\n                   x={x} \r\n                   y={y} \r\n                   dy={-4} \r\n                   fontSize='16' \r\n                   fontFamily='sans-serif'\r\n                   fill={fill}\r\n                   textAnchor=\"middle\">{value}%</text>\r\n      }\r\n    };\r\n    const SimpleBarChart = React.createClass({\r\n        render () {\r\n          return (\r\n            <BarChart \r\n                width={900} \r\n                height={260} \r\n                data={data}\r\n                margin={{top: 5, right: 0, left: 0, bottom: 25}}>\r\n           <XAxis \r\n               dataKey=\"Text\"\r\n               fontFamily=\"sans-serif\"\r\n               tickSize\r\n               dy='25'\r\n           />\r\n           <YAxis hide/>\r\n           <CartesianGrid \r\n               vertical={false}\r\n               stroke=\"#ebf3f0\"\r\n           />\r\n           <Bar \r\n               dataKey=\"RespondentPercentage\" \r\n               barSize ={170}\r\n               fontFamily=\"sans-serif\"\r\n               >\r\n                {\r\n                    data.map((entry, index) => (\r\n                        <Cell fill={data[index].AnswerRef === \"three\" ? '#61bf93' : '#ededed'} />\r\n                    ))\r\n                }\r\n            </Bar>\r\n          </BarChart>\r\n        );\r\n      }\r\n    })\r\n\r\nexport default BarCharts;\r\n"]},"metadata":{},"sourceType":"module"}