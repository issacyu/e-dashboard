{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\src\\\\containers\\\\Inventory\\\\Inventory.js\";\nimport React, { Component } from 'react';\nimport { Row, Panel, Col } from 'react-bootstrap';\nimport DataGrid from '../../components/Table/DataGrid/DataGrid';\nimport PieChart from '../../components/Charts/PieChart';\nimport ManufacturerColumns from '../../components/Table/GridColumns/ManufacturerColumn';\nimport InventoryColumns from '../../components/Table/GridColumns/InventoryColumns';\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inventory, _Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [{\n        name: 'Tanner Linsley',\n        age: 26,\n        friend: {\n          name: 'Jason Maurer',\n          age: 23\n        }\n      }, {\n        name: 'John Doe',\n        age: 25,\n        friend: {\n          name: 'Bill Gate',\n          age: 18\n        }\n      }, {\n        name: 'Jason B',\n        age: 31,\n        friend: {\n          name: 'Jayden',\n          age: 56\n        }\n      }]\n    };\n\n    _this.onSaveDataGridHandler = function () {\n      console.log(\"Button clicked!!!\");\n    };\n\n    _this.onDeleteDataGridRowHandler = function () {};\n\n    _this.onAddDataGridRowHandler = function () {};\n\n    _this.onRenderEditableCellHandler = function (cellInfo) {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: function onBlur(e) {\n          var data = _toConsumableArray(_this.state.data);\n\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n          _this.setState({\n            data: data\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: _this.state.data[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        bsStyle: \"danger\",\n        defaultExpanded: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Panel.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Stock Alert\"), React.createElement(Panel.Collapse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Panel.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"alert 1\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"alert 2\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"alert 3\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"alert 4\")))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 8,\n        lg: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(DataGrid, {\n        data: this.state.data,\n        title: \"Manufacturer\",\n        clicked: function clicked() {\n          return _this2.onSaveDataGridHandler();\n        },\n        columns: ManufacturerColumns(this.onRenderEditableCellHandler),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(PieChart, {\n        bsStyle: \"primary\",\n        width: 800,\n        height: 400,\n        cx: 300,\n        cy: 200,\n        outerRadius: 200,\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(DataGrid, {\n        data: this.state.data,\n        title: \"Inventory\",\n        columns: InventoryColumns(this.onRenderEditableCellHandler),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Inventory;\n}(Component);\n\nexport default Inventory;","map":{"version":3,"sources":["C:\\Users\\issac\\Documents\\React\\simple-dashboard\\src\\containers\\Inventory\\Inventory.js"],"names":["React","Component","Row","Panel","Col","DataGrid","PieChart","ManufacturerColumns","InventoryColumns","Inventory","state","data","name","age","friend","onSaveDataGridHandler","console","log","onDeleteDataGridRowHandler","onAddDataGridRowHandler","onRenderEditableCellHandler","cellInfo","backgroundColor","e","index","column","id","target","innerHTML","setState","__html"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,GAArB,QAAgC,iBAAhC;AAEA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,mBAAP,MAAgC,uDAAhC;AACA,OAAOC,gBAAP,MAA6B,qDAA7B;;IAEMC,S;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,IAAI,EACJ,CACI;AACIC,QAAAA,IAAI,EAAE,gBADV;AAEIC,QAAAA,GAAG,EAAE,EAFT;AAGIC,QAAAA,MAAM,EAAE;AACJF,UAAAA,IAAI,EAAE,cADF;AAEJC,UAAAA,GAAG,EAAE;AAFD;AAHZ,OADJ,EASI;AACID,QAAAA,IAAI,EAAE,UADV;AAEIC,QAAAA,GAAG,EAAE,EAFT;AAGIC,QAAAA,MAAM,EAAE;AACJF,UAAAA,IAAI,EAAE,WADF;AAEJC,UAAAA,GAAG,EAAE;AAFD;AAHZ,OATJ,EAiBI;AACID,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,GAAG,EAAE,EAFT;AAGIC,QAAAA,MAAM,EAAE;AACJF,UAAAA,IAAI,EAAE,QADF;AAEJC,UAAAA,GAAG,EAAE;AAFD;AAHZ,OAjBJ;AAFI,K;;UA8BRE,qB,GAAwB,YAAM;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACF,K;;UAEDC,0B,GAA6B,YAAM,CAElC,C;;UAEDC,uB,GAA0B,YAAM,CAE/B,C;;UAEDC,2B,GAA8B,UAACC,QAAD,EAAa;AACvC,aACI;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SADX;AAEI,QAAA,eAAe,MAFnB;AAGI,QAAA,8BAA8B,MAHlC;AAII,QAAA,MAAM,EAAE,gBAAAC,CAAC,EAAI;AACT,cAAMZ,IAAI,sBAAO,MAAKD,KAAL,CAAWC,IAAlB,CAAV;;AACAA,UAAAA,IAAI,CAACU,QAAQ,CAACG,KAAV,CAAJ,CAAqBH,QAAQ,CAACI,MAAT,CAAgBC,EAArC,IAA2CH,CAAC,CAACI,MAAF,CAASC,SAApD;;AACA,gBAAKC,QAAL,CAAc;AAAElB,YAAAA,IAAI,EAAJA;AAAF,WAAd;AACH,SARL;AASI,QAAA,uBAAuB,EAAE;AACrBmB,UAAAA,MAAM,EAAE,MAAKpB,KAAL,CAAWC,IAAX,CAAgBU,QAAQ,CAACG,KAAzB,EAAgCH,QAAQ,CAACI,MAAT,CAAgBC,EAAhD;AADa,SAT7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAeH,K;;;;;;;6BAEO;AAAA;;AACJ,aACI,0CACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAwB,QAAA,eAAe,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAII,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CADA,CADJ,CAJJ,CADJ,CADA,EAmBA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AACI,QAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWC,IADrB;AAEI,QAAA,KAAK,EAAC,cAFV;AAGI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACI,qBAAL,EAAN;AAAA,SAHb;AAII,QAAA,OAAO,EAAER,mBAAmB,CAAC,KAAKa,2BAAN,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAUI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AACI,QAAA,OAAO,EAAC,SADZ;AAEI,QAAA,KAAK,EAAE,GAFX;AAGI,QAAA,MAAM,EAAE,GAHZ;AAII,QAAA,EAAE,EAAE,GAJR;AAKI,QAAA,EAAE,EAAE,GALR;AAMI,QAAA,WAAW,EAAE,GANjB;AAOI,QAAA,IAAI,EAAC,SAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAVJ,CAnBA,EA0CA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKV,KAAL,CAAWC,IAA3B;AACI,QAAA,KAAK,EAAC,WADV;AAEI,QAAA,OAAO,EAAEH,gBAAgB,CAAC,KAAKY,2BAAN,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CA1CA,CADJ;AAmDH;;;;EAlHmBnB,S;;AAqHxB,eAAeQ,SAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Row, Panel, Col } from 'react-bootstrap';\r\n\r\nimport DataGrid from '../../components/Table/DataGrid/DataGrid';\r\nimport PieChart from '../../components/Charts/PieChart';\r\nimport ManufacturerColumns from '../../components/Table/GridColumns/ManufacturerColumn';\r\nimport InventoryColumns from '../../components/Table/GridColumns/InventoryColumns';\r\n\r\nclass Inventory extends Component {\r\n\r\n    state = {\r\n        data: \r\n        [\r\n            {\r\n                name: 'Tanner Linsley',\r\n                age: 26,\r\n                friend: {\r\n                    name: 'Jason Maurer',\r\n                    age: 23,\r\n                }\r\n            },\r\n            {\r\n                name: 'John Doe',\r\n                age: 25,\r\n                friend: {\r\n                    name: 'Bill Gate',\r\n                    age: 18,\r\n                }\r\n            },\r\n            {\r\n                name: 'Jason B',\r\n                age: 31,\r\n                friend: {\r\n                    name: 'Jayden',\r\n                    age: 56,\r\n                }\r\n            }\r\n        ],\r\n    };\r\n\r\n    onSaveDataGridHandler = () => {\r\n       console.log(\"Button clicked!!!\");\r\n    };\r\n\r\n    onDeleteDataGridRowHandler = () => {\r\n\r\n    };\r\n\r\n    onAddDataGridRowHandler = () => {\r\n\r\n    };\r\n\r\n    onRenderEditableCellHandler = (cellInfo) =>{\r\n        return (\r\n            <div\r\n                style={{ backgroundColor: \"#fafafa\" }}\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={e => {\r\n                    const data = [...this.state.data];\r\n                    data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n                    this.setState({ data });\r\n                }}\r\n                dangerouslySetInnerHTML={{\r\n                    __html: this.state.data[cellInfo.index][cellInfo.column.id]\r\n                }}\r\n          />\r\n        )\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Row>\r\n                <Panel bsStyle='danger' defaultExpanded>\r\n                    <Panel.Heading>\r\n                        Stock Alert\r\n                    </Panel.Heading>\r\n                    <Panel.Collapse>\r\n                        <Panel.Body>\r\n                        <ul>\r\n                            <li>alert 1</li>\r\n                            <li>alert 2</li>\r\n                            <li>alert 3</li>\r\n                            <li>alert 4</li>\r\n                        </ul>\r\n                        </Panel.Body>\r\n                    </Panel.Collapse>\r\n                </Panel>\r\n            </Row>\r\n            \r\n            <Row>\r\n                <Col md={8} lg={8}>\r\n                    <DataGrid \r\n                        data={this.state.data} \r\n                        title='Manufacturer'\r\n                        clicked={() => this.onSaveDataGridHandler()}\r\n                        columns={ManufacturerColumns(this.onRenderEditableCellHandler)}\r\n                    />\r\n                </Col>\r\n\r\n                <Col md={4} lg={4}>\r\n                    <PieChart \r\n                        bsStyle='primary'\r\n                        width={800}\r\n                        height={400}\r\n                        cx={300}\r\n                        cy={200}\r\n                        outerRadius={200}\r\n                        fill='#8884d8'\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <DataGrid data={this.state.data} \r\n                    title='Inventory'\r\n                    columns={InventoryColumns(this.onRenderEditableCellHandler)}\r\n                />\r\n            </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}