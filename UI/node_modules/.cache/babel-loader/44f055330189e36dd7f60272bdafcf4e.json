{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\src\\\\hoc\\\\WithGridFunction\\\\WithGridFunction.js\";\nimport React, { Component } from 'react';\nimport Modal from '../../components/Modal/Modal';\nimport Chance from \"chance\";\n\nvar withGridFunction = function withGridFunction(WrappedComponent) {\n  var _temp;\n\n  return _temp =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(_temp, _Component);\n\n    function _temp() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, _temp);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_temp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        id: 0,\n        selection: [],\n        selectAll: false,\n        data: [],\n        disableDeleteButton: true,\n        showModal: false,\n        modalTitle: '',\n        modalBody: '',\n        modalStyle: ''\n      };\n\n      _this.setData = function (data) {\n        // Each data must contains an id \n        // in order to show a checkbox.\n        _this.setState({\n          data: data\n        });\n      };\n\n      _this.toggleSelection = function (key, shift, row) {\n        var selection = _toConsumableArray(_this.state.selection);\n\n        var keyIndex = selection.indexOf(key);\n\n        if (keyIndex >= 0) {\n          selection = [].concat(_toConsumableArray(selection.slice(0, keyIndex)), _toConsumableArray(selection.slice(keyIndex + 1)));\n        } else {\n          selection.push(key);\n        }\n\n        _this.setState({\n          selection: selection,\n          disableDeleteButton: selection.length === 0\n        });\n      };\n\n      _this.isSelected = function (key) {\n        return _this.state.selection.includes(key);\n      };\n\n      _this.onToggleModalHandler = function (modalTitle, modalBody, modalStyle) {\n        _this.setState(function (prevState) {\n          return {\n            showModal: !prevState.showModal,\n            modalTitle: modalTitle,\n            modalBody: modalBody,\n            modalStyle: modalStyle\n          };\n        });\n      };\n\n      _this.onDeleteRowHandler = function () {\n        var dataClone = _toConsumableArray(_this.state.data);\n\n        var newData = dataClone.filter(function (r) {\n          return !_this.state.selection.includes(r.id);\n        });\n\n        _this.setState({\n          data: _toConsumableArray(newData)\n        });\n      };\n\n      _this.onAddRowHandler = function (emptyRow) {\n        var chance = new Chance();\n        emptyRow['id'] = chance.guid();\n\n        var newData = _toConsumableArray(_this.state.data);\n\n        newData.push(emptyRow);\n\n        _this.setState({\n          data: _toConsumableArray(newData)\n        });\n      };\n\n      return _this;\n    }\n\n    _createClass(_temp, [{\n      key: \"render\",\n      value: function render() {\n        var toggleSelection = this.toggleSelection,\n            toggleAll = this.toggleAll,\n            isSelected = this.isSelected;\n        var _this$state = this.state,\n            data = _this$state.data,\n            selectAll = _this$state.selectAll;\n        var checkboxProps = {\n          selectAll: selectAll,\n          isSelected: isSelected,\n          toggleSelection: toggleSelection,\n          toggleAll: toggleAll,\n          selectType: \"checkbox\"\n        };\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          showModal: this.state.showModal,\n          modalTitle: this.state.modalTitle,\n          modalBody: this.state.modalBody,\n          modalStyle: this.state.modalStyle,\n          toggle: this.onToggleModalHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), React.createElement(WrappedComponent, Object.assign({\n          setData: this.setData,\n          checkboxProps: checkboxProps,\n          onDeleteRowHandler: this.onDeleteRowHandler,\n          onAddRowHandler: this.onAddRowHandler,\n          toggleModal: this.onToggleModalHandler\n        }, this.state, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        })));\n      }\n    }]);\n\n    return _temp;\n  }(Component), _temp;\n};\n\nexport default withGridFunction;","map":{"version":3,"sources":["C:\\Users\\issac\\Documents\\React\\e-dashboard\\e-dashboard\\UI\\src\\hoc\\WithGridFunction\\WithGridFunction.js"],"names":["React","Component","Modal","Chance","withGridFunction","WrappedComponent","state","id","selection","selectAll","data","disableDeleteButton","showModal","modalTitle","modalBody","modalStyle","setData","setState","toggleSelection","key","shift","row","keyIndex","indexOf","slice","push","length","isSelected","includes","onToggleModalHandler","prevState","onDeleteRowHandler","dataClone","newData","filter","r","onAddRowHandler","emptyRow","chance","guid","toggleAll","checkboxProps","selectType","props"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Chance from \"chance\";\r\n\r\nconst withGridFunction = (WrappedComponent) => {\r\n    return class extends Component{\r\n        state = {\r\n            id: 0,\r\n            selection: [],\r\n            selectAll: false,\r\n            data: [],\r\n            disableDeleteButton: true,\r\n            showModal: false,\r\n            modalTitle: '',\r\n            modalBody: '',\r\n            modalStyle: ''\r\n        }\r\n\r\n        setData = (data) => {\r\n            // Each data must contains an id \r\n            // in order to show a checkbox.\r\n            this.setState({data: data});\r\n        };\r\n\r\n        toggleSelection = (key, shift, row) => {\r\n            let selection = [...this.state.selection];\r\n            const keyIndex = selection.indexOf(key);\r\n            if(keyIndex >= 0) {\r\n                selection = [\r\n                    ...selection.slice(0, keyIndex),\r\n                    ...selection.slice(keyIndex + 1)\r\n                ]\r\n            }\r\n            else {\r\n                selection.push(key);\r\n            }\r\n    \r\n            this.setState({\r\n                selection,\r\n                disableDeleteButton: selection.length === 0\r\n            })\r\n        };\r\n\r\n        isSelected = key => {\r\n            return this.state.selection.includes(key);\r\n        };\r\n\r\n        onToggleModalHandler = (modalTitle, modalBody, modalStyle) => {\r\n            this.setState((prevState) => ({\r\n                showModal: !prevState.showModal,\r\n                modalTitle: modalTitle,\r\n                modalBody: modalBody,\r\n                modalStyle: modalStyle\r\n            }))\r\n        };\r\n\r\n        onDeleteRowHandler = () => {\r\n            const dataClone = [...this.state.data];\r\n            const newData = dataClone.filter(r => !this.state.selection.includes(r.id));\r\n            this.setState({data: [...newData]});\r\n        };\r\n\r\n        onAddRowHandler = (emptyRow) => {\r\n            const chance = new Chance();\r\n            emptyRow['id'] = chance.guid(); \r\n            let newData = [...this.state.data];\r\n            newData.push(emptyRow);\r\n            this.setState({data: [...newData]});\r\n        }\r\n\r\n        render(){\r\n            const { toggleSelection, toggleAll, isSelected } = this;\r\n            const { data, selectAll } = this.state;\r\n            const checkboxProps = {\r\n              selectAll,\r\n              isSelected,\r\n              toggleSelection,\r\n              toggleAll,\r\n              selectType: \"checkbox\",\r\n            };\r\n\r\n            return(\r\n                <div>\r\n                    <Modal \r\n                        showModal={this.state.showModal}\r\n                        modalTitle={this.state.modalTitle}\r\n                        modalBody={this.state.modalBody}\r\n                        modalStyle={this.state.modalStyle}\r\n                        toggle={this.onToggleModalHandler}\r\n                    />\r\n                    <WrappedComponent \r\n                        setData={this.setData} \r\n                        checkboxProps ={checkboxProps}\r\n                        onDeleteRowHandler={this.onDeleteRowHandler}\r\n                        onAddRowHandler={this.onAddRowHandler}\r\n                        toggleModal={this.onToggleModalHandler}\r\n                        {...this.state}\r\n                        {...this.props} \r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withGridFunction;"]},"metadata":{},"sourceType":"module"}