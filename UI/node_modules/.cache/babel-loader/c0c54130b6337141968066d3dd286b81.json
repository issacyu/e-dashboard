{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\src\\\\containers\\\\Inventory\\\\Inventory.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Panel, Table } from 'react-bootstrap';\nimport * as actions from '../../store/actions/inventory';\nimport DataGrid from '../../components/Table/DataGrid/DataGrid';\nimport PieChart from '../../components/Charts/PieChart';\nimport Alert from '../../components/Alert/Alert';\nimport ManufacturerColumns from '../../components/Table/GridColumns/ManufacturerColumn';\nimport InventoryColumns from '../../components/Table/GridColumns/InventoryColumns';\nimport EmptyRow from '../../components/Table/GridRows/GridRow';\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inventory, _Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      manufacturerData: [{\n        manufacturer: 'Apple',\n        name: 'Steve Job',\n        phone: '123-456-7890',\n        email: '123@gmail.com',\n        address: '123th St New York NY 10012'\n      }, {\n        manufacturer: 'Apple',\n        name: 'Steve Job',\n        phone: '123-456-7890',\n        email: '123@gmail.com',\n        address: '123th St New York NY 10012'\n      }, {\n        manufacturer: 'Apple',\n        name: 'Steve Job',\n        phone: '123-456-7890',\n        email: '123@gmail.com',\n        address: '123th St New York NY 10012'\n      }],\n      inventoryData: []\n    };\n\n    _this.onSaveInventoryData = function () {\n      var newInventoryData = _toConsumableArray(_this.state.inventoryData);\n\n      _this.props.onSaveInventoryData(newInventoryData);\n    };\n\n    _this.onManufacturerRenderEditableCellHandler = function (cellInfo) {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: function onBlur(e) {\n          var data = _toConsumableArray(_this.state.manufacturerData);\n\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n          _this.setState({\n            manufacturerData: _toConsumableArray(data)\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: _this.state.manufacturerData[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    };\n\n    _this.onInventoryRenderEditableCellHandler = function (cellInfo) {\n      // Avoid exception! We don't want to modify an empty array.\n      if (_this.state.inventoryData.length !== 0) {\n        console.log('here!0');\n        return React.createElement(\"div\", {\n          style: {\n            backgroundColor: \"#fafafa\"\n          },\n          contentEditable: true,\n          suppressContentEditableWarning: true,\n          onBlur: function onBlur(e) {\n            var data = _toConsumableArray(_this.state.inventoryData);\n\n            data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n            _this.setState({\n              inventoryData: data\n            });\n          },\n          dangerouslySetInnerHTML: {\n            __html: _this.state.inventoryData[cellInfo.index][cellInfo.column.id]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchInventoryData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var alert;\n      var lowStockItem = this.state.inventoryData.filter(function (i) {\n        return i.quantity < 10;\n      });\n\n      if (lowStockItem.length > 0) {\n        alert = React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 12,\n          lg: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Alert, {\n          title: \"Low Stock Warning\",\n          messages: lowStockItem.map(function (i) {\n            return i.product;\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, alert, React.createElement(Row, {\n        className: \"show-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Total Item Left: 200\"), React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Total Value of Item: $2000\"), React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Average Item cost: $45.28\"), React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Number of Item: 200\")))), React.createElement(Col, {\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(PieChart, {\n        bsStyle: \"primary\",\n        heading: \"Cost By Category\",\n        width: 800,\n        height: 300,\n        cx: 220,\n        cy: 100,\n        outerRadius: 130,\n        fill: \"#8884d8\",\n        displayKey: \"category\",\n        displayValue: \"totalCost\",\n        displayData: this.props.inventoryData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(PieChart, {\n        bsStyle: \"primary\",\n        heading: \"Cost By Product\",\n        width: 800,\n        height: 300,\n        cx: 220,\n        cy: 100,\n        outerRadius: 130,\n        fill: \"#8884d8\",\n        displayKey: \"product\",\n        displayValue: \"totalCost\",\n        displayData: this.props.inventoryData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(PieChart, {\n        bsStyle: \"primary\",\n        heading: \"Category\",\n        width: 800,\n        height: 300,\n        cx: 220,\n        cy: 100,\n        outerRadius: 130,\n        fill: \"#8884d8\",\n        displayKey: \"category\",\n        displayValue: \"quantity\",\n        displayData: this.props.inventoryData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(DataGrid //The key uses to notify the child component to re-render.\n      , {\n        key: this.props.inventoryData,\n        data: this.props.inventoryData,\n        title: \"Inventory\",\n        columns: InventoryColumns(this.onInventoryRenderEditableCellHandler),\n        onSaveHandler: this.onSaveInventoryData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Inventory;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    inventoryData: state.inventory.inventoryData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchInventoryData: function onFetchInventoryData() {\n      return dispatch(actions.fetchInventoryData());\n    },\n    onSaveInventoryData: function onSaveInventoryData(newData) {\n      return dispatch(actions.saveInventoryData(newData));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inventory);","map":{"version":3,"sources":["C:\\Users\\issac\\Documents\\React\\e-dashboard\\e-dashboard\\UI\\src\\containers\\Inventory\\Inventory.js"],"names":["React","Component","connect","Row","Col","Panel","Table","actions","DataGrid","PieChart","Alert","ManufacturerColumns","InventoryColumns","EmptyRow","Inventory","state","manufacturerData","manufacturer","name","phone","email","address","inventoryData","onSaveInventoryData","newInventoryData","props","onManufacturerRenderEditableCellHandler","cellInfo","backgroundColor","e","data","index","column","id","target","innerHTML","setState","__html","onInventoryRenderEditableCellHandler","length","console","log","onFetchInventoryData","alert","lowStockItem","filter","i","quantity","map","product","mapStateToProps","inventory","mapDispatchToProps","dispatch","fetchInventoryData","newData","saveInventoryData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Panel, Table } from 'react-bootstrap';\r\nimport * as actions from '../../store/actions/inventory'\r\n\r\nimport DataGrid from '../../components/Table/DataGrid/DataGrid';\r\nimport PieChart from '../../components/Charts/PieChart';\r\nimport Alert from '../../components/Alert/Alert';\r\nimport ManufacturerColumns from '../../components/Table/GridColumns/ManufacturerColumn';\r\nimport InventoryColumns from '../../components/Table/GridColumns/InventoryColumns';\r\nimport EmptyRow from '../../components/Table/GridRows/GridRow';\r\n\r\nclass Inventory extends Component {\r\n\r\n    state = {\r\n        manufacturerData: \r\n        [\r\n            {\r\n                manufacturer: 'Apple',\r\n                name: 'Steve Job',\r\n                phone: '123-456-7890',\r\n                email: '123@gmail.com',\r\n                address: '123th St New York NY 10012'\r\n            },\r\n            {\r\n                manufacturer: 'Apple',\r\n                name: 'Steve Job',\r\n                phone: '123-456-7890',\r\n                email: '123@gmail.com',\r\n                address: '123th St New York NY 10012'\r\n            },\r\n            {\r\n                manufacturer: 'Apple',\r\n                name: 'Steve Job',\r\n                phone: '123-456-7890',\r\n                email: '123@gmail.com',\r\n                address: '123th St New York NY 10012'\r\n            }\r\n        ],\r\n\r\n        inventoryData:[]\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchInventoryData();\r\n    }\r\n\r\n    onSaveInventoryData = () => {\r\n        const newInventoryData = [...this.state.inventoryData];\r\n        this.props.onSaveInventoryData(newInventoryData);\r\n    }\r\n\r\n    onManufacturerRenderEditableCellHandler = (cellInfo) =>{\r\n        return (\r\n            <div\r\n                style={{ backgroundColor: \"#fafafa\" }}\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={e => {\r\n                    const data = [...this.state.manufacturerData];\r\n                    data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n                    this.setState({ manufacturerData: [...data] });\r\n                }}                \r\n                dangerouslySetInnerHTML={{\r\n                    __html: this.state.manufacturerData[cellInfo.index][cellInfo.column.id]\r\n                }}\r\n          />\r\n        )\r\n    };\r\n\r\n    onInventoryRenderEditableCellHandler = (cellInfo) =>{\r\n        // Avoid exception! We don't want to modify an empty array.\r\n        if(this.state.inventoryData.length !== 0) {\r\n            console.log('here!0');\r\n            return (\r\n                <div\r\n                    style={{ backgroundColor: \"#fafafa\" }}\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    onBlur={e => {\r\n                        const data = [...this.state.inventoryData];\r\n                        data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n                        this.setState({ inventoryData: data });\r\n                    }}\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: this.state.inventoryData[cellInfo.index][cellInfo.column.id]\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    render(){\r\n        let alert;\r\n        const lowStockItem = this.state.inventoryData.filter(i => i.quantity < 10)\r\n        if(lowStockItem.length > 0) {\r\n            alert = \r\n                <Row>\r\n                    <Col md={12} lg={12}>   \r\n                        <Alert title='Low Stock Warning' messages={lowStockItem.map(i => i.product)}/>\r\n                    </Col>\r\n                </Row>\r\n        }\r\n\r\n        return(\r\n            <div>    \r\n                {alert}\r\n                <Row className=\"show-grid\">\r\n                    <Col md={3} lg={3}>\r\n                        <Panel>\r\n                            <ul class=\"list-group\">\r\n                                <li class=\"list-group-item\">Total Item Left: 200</li>\r\n                                <li class=\"list-group-item\">Total Value of Item: $2000</li>\r\n                                <li class=\"list-group-item\">Average Item cost: $45.28</li>\r\n                                <li class=\"list-group-item\">Number of Item: 200</li>\r\n                            </ul>\r\n                        </Panel>\r\n                    </Col>\r\n                    <Col md={3} lg={3}>\r\n                        <PieChart \r\n                            bsStyle='primary'\r\n                            heading='Cost By Category'\r\n                            width={800}\r\n                            height={300}\r\n                            cx={220}\r\n                            cy={100}\r\n                            outerRadius={130}\r\n                            fill='#8884d8'\r\n                            displayKey='category'\r\n                            displayValue='totalCost'\r\n                            displayData={this.props.inventoryData}\r\n                        />\r\n                    </Col>\r\n                    <Col md={3} lg={3}>\r\n                        <PieChart \r\n                            bsStyle='primary'\r\n                            heading='Cost By Product'\r\n                            width={800}\r\n                            height={300}\r\n                            cx={220}\r\n                            cy={100}\r\n                            outerRadius={130}\r\n                            fill='#8884d8'\r\n                            displayKey='product'\r\n                            displayValue='totalCost'\r\n                            displayData={this.props.inventoryData}\r\n                        />\r\n                    </Col>\r\n                    <Col md={3} lg={3}>\r\n                        <PieChart \r\n                            bsStyle='primary'\r\n                            heading='Category'\r\n                            width={800}\r\n                            height={300}\r\n                            cx={220}\r\n                            cy={100}\r\n                            outerRadius={130}\r\n                            fill='#8884d8'\r\n                            displayKey='category'\r\n                            displayValue='quantity'\r\n                            displayData={this.props.inventoryData}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                {/* <Row>\r\n                    <Col md={12} lg={12}>\r\n                        <DataGrid \r\n                            data={this.state.manufacturerData} \r\n                            title='Manufacturer'\r\n                            columns={ManufacturerColumns(this.onManufacturerRenderEditableCellHandler)}\r\n                            emptyRow={EmptyRow('MANUFACTURER')}\r\n                        />\r\n                    </Col>\r\n                </Row> */}\r\n                <Row>\r\n                    <Col md={12} lg={12}>\r\n                        <DataGrid \r\n                            //The key uses to notify the child component to re-render.\r\n                            key={this.props.inventoryData}\r\n                            data={this.props.inventoryData} \r\n                            title='Inventory'\r\n                            columns={InventoryColumns(this.onInventoryRenderEditableCellHandler)}\r\n                            onSaveHandler={this.onSaveInventoryData}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        inventoryData: state.inventory.inventoryData\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchInventoryData: () => dispatch(actions.fetchInventoryData()),\r\n        onSaveInventoryData: (newData) => dispatch(actions.saveInventoryData(newData))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Inventory);"]},"metadata":{},"sourceType":"module"}