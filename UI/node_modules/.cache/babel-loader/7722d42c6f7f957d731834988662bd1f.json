{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\src\\\\components\\\\Charts\\\\PieChart.js\";\nimport React from 'react';\nimport { PieChart, Pie, Legend, Tooltip, Cell, ResponsiveContainer } from 'recharts';\nimport { Panel } from 'react-bootstrap';\nvar data = [{\n  name: 'Group A',\n  value: 400\n}, {\n  name: 'Group B',\n  value: 300\n}, {\n  name: 'Group C',\n  value: 300\n}, {\n  name: 'Group D',\n  value: 200\n}];\nvar COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\nvar RADIAN = Math.PI / 180;\n\nvar processData = function processData(data, key, value) {\n  var dataClone = _toConsumableArray(data);\n\n  var newData = [];\n  var map = new Map();\n  dataClone.forEach(function (x) {\n    if (map.has(x[key])) {\n      var val = map.get(x[key]) + x[value];\n      map.set(x[key], val);\n    } else {\n      map.set(x[key], x[value]);\n    }\n  });\n  map.forEach(function (v, k) {\n    var obj = {\n      name: k,\n      value: v\n    };\n    newData.push(obj);\n  });\n  return newData;\n};\n\nvar renderCustomizedLabel = function renderCustomizedLabel(_ref) {\n  var cx = _ref.cx,\n      cy = _ref.cy,\n      midAngle = _ref.midAngle,\n      innerRadius = _ref.innerRadius,\n      outerRadius = _ref.outerRadius,\n      percent = _ref.percent,\n      index = _ref.index;\n  var radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  var x = cx + radius * Math.cos(-midAngle * RADIAN);\n  var y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return React.createElement(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"\".concat((percent * 100).toFixed(0), \"%\"));\n};\n\nvar pieChart = function pieChart(props) {\n  return React.createElement(Panel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    width: \"98.8%\",\n    height: 350,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(PieChart, {\n    width: props.width,\n    height: props.height,\n    margin: {\n      top: 35,\n      bottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Pie, {\n    data: processData(props.displayData, props.displayKey, props.displayValue),\n    labelLine: false,\n    label: renderCustomizedLabel,\n    outerRadius: props.outerRadius,\n    fill: props.fill,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, data.map(function (entry, index) {\n    return React.createElement(Cell, {\n      fill: COLORS[index % COLORS.length],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  })))));\n};\n\nexport default pieChart;","map":{"version":3,"sources":["C:\\Users\\issac\\Documents\\React\\e-dashboard\\e-dashboard\\UI\\src\\components\\Charts\\PieChart.js"],"names":["React","PieChart","Pie","Legend","Tooltip","Cell","ResponsiveContainer","Panel","data","name","value","COLORS","RADIAN","Math","PI","processData","key","dataClone","newData","map","Map","forEach","x","has","val","get","set","v","k","obj","push","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","cos","y","sin","toFixed","pieChart","props","width","height","top","bottom","displayData","displayKey","displayValue","fill","entry","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n    PieChart, \r\n    Pie, \r\n    Legend, \r\n    Tooltip,\r\n    Cell,\r\n    ResponsiveContainer\r\n} from 'recharts';\r\n\r\nimport {\r\n    Panel\r\n} from 'react-bootstrap'\r\n\r\nconst data = [{name: 'Group A', value: 400}, {name: 'Group B', value: 300},\r\n                  {name: 'Group C', value: 300}, {name: 'Group D', value: 200}];\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst RADIAN = Math.PI / 180;  \r\n\r\nconst processData = (data, key, value) => {\r\n    let dataClone = [...data];\r\n    let newData = [];\r\n    let map = new Map();\r\n\r\n    dataClone.forEach(x => {\r\n        if(map.has(x[key])) {\r\n            const val = map.get(x[key]) + x[value];\r\n            map.set(x[key], val);\r\n        }\r\n        else{\r\n            map.set(x[key], x[value]);\r\n        }\r\n    });\r\n\r\n    map.forEach((v, k) => {\r\n        const obj = {\r\n            name: k,\r\n            value: v\r\n        }\r\n        newData.push(obj);\r\n    });\r\n    return newData;\r\n}\r\n\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n \tconst radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x  = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy  + radius * Math.sin(-midAngle * RADIAN);\r\n \r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nconst pieChart = (props) => {\r\n    return (\r\n        <Panel>\r\n            <ResponsiveContainer width=\"98.8%\" height={350}>\r\n                <PieChart width={props.width} height={props.height}\r\n                    margin={{top: 35, bottom: 5}}>\r\n                    <Legend />\r\n                    <Tooltip />\r\n                    <Pie\r\n                        data={processData(props.displayData, props.displayKey, props.displayValue)}  \r\n                        labelLine={false}\r\n                        label={renderCustomizedLabel}\r\n                        outerRadius={props.outerRadius} \r\n                        fill={props.fill}>\r\n                        {data.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>)}\r\n                    </Pie>\r\n                </PieChart>\r\n            </ResponsiveContainer>\r\n       </Panel>\r\n    );\r\n}\r\n\r\nexport default pieChart;"]},"metadata":{},"sourceType":"module"}