{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\e-dashboard\\\\e-dashboard\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n// Build data for pie chart.\nexport var processData = function processData(data, key, value) {\n  if (typeof data === 'undefined') return [];\n\n  var dataClone = _toConsumableArray(data);\n\n  var newData = [];\n  var map = new Map();\n  dataClone.forEach(function (x) {\n    if (map.has(x[key])) {\n      var val = map.get(x[key]) + x[value];\n      map.set(x[key], val);\n    } else {\n      map.set(x[key], x[value]);\n    }\n\n    console.log(map);\n  });\n  map.forEach(function (v, k) {\n    var obj = {\n      name: k,\n      value: v\n    };\n    newData.push(obj);\n  });\n  return newData;\n};","map":{"version":3,"sources":["C:\\Users\\issac\\Documents\\React\\e-dashboard\\e-dashboard\\UI\\src\\components\\Charts\\Utilities.js"],"names":["processData","data","key","value","dataClone","newData","map","Map","forEach","x","has","val","get","set","console","log","v","k","obj","name","push"],"mappings":";AAAA;AACA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,GAAP,EAAYC,KAAZ,EAAsB;AAC7C,MAAG,OAAOF,IAAP,KAAgB,WAAnB,EACI,OAAO,EAAP;;AACJ,MAAIG,SAAS,sBAAOH,IAAP,CAAb;;AACA,MAAII,OAAO,GAAG,EAAd;AACA,MAAIC,GAAG,GAAG,IAAIC,GAAJ,EAAV;AAEAH,EAAAA,SAAS,CAACI,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACnB,QAAGH,GAAG,CAACI,GAAJ,CAAQD,CAAC,CAACP,GAAD,CAAT,CAAH,EAAoB;AAChB,UAAMS,GAAG,GAAGL,GAAG,CAACM,GAAJ,CAAQH,CAAC,CAACP,GAAD,CAAT,IAAkBO,CAAC,CAACN,KAAD,CAA/B;AACAG,MAAAA,GAAG,CAACO,GAAJ,CAAQJ,CAAC,CAACP,GAAD,CAAT,EAAgBS,GAAhB;AACH,KAHD,MAII;AACAL,MAAAA,GAAG,CAACO,GAAJ,CAAQJ,CAAC,CAACP,GAAD,CAAT,EAAgBO,CAAC,CAACN,KAAD,CAAjB;AACH;;AACDW,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACH,GATD;AAWAA,EAAAA,GAAG,CAACE,OAAJ,CAAY,UAACQ,CAAD,EAAIC,CAAJ,EAAU;AAClB,QAAMC,GAAG,GAAG;AACRC,MAAAA,IAAI,EAAEF,CADE;AAERd,MAAAA,KAAK,EAAEa;AAFC,KAAZ;AAIAX,IAAAA,OAAO,CAACe,IAAR,CAAaF,GAAb;AACH,GAND;AAOA,SAAOb,OAAP;AACH,CA1BM","sourcesContent":["// Build data for pie chart.\r\nexport const processData = (data, key, value) => {\r\n    if(typeof data === 'undefined')\r\n        return [];\r\n    let dataClone = [...data];\r\n    let newData = [];\r\n    let map = new Map();\r\n\r\n    dataClone.forEach(x => {\r\n        if(map.has(x[key])) {\r\n            const val = map.get(x[key]) + x[value];\r\n            map.set(x[key], val);\r\n        }\r\n        else{\r\n            map.set(x[key], x[value]);\r\n        }\r\n        console.log(map);\r\n    });\r\n\r\n    map.forEach((v, k) => {\r\n        const obj = {\r\n            name: k,\r\n            value: v\r\n        }\r\n        newData.push(obj);\r\n    });\r\n    return newData;\r\n}"]},"metadata":{},"sourceType":"module"}