{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\src\\\\containers\\\\Inventory\\\\Inventory.js\";\nimport React, { Component } from 'react';\nimport { Row, Panel, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport DataGrid from '../../components/Table/DataGrid';\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inventory, _Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [{\n        name: 'Tanner Linsley',\n        age: 26,\n        friend: {\n          name: 'Jason Maurer',\n          age: 23\n        }\n      }, {\n        name: 'John Doe',\n        age: 25,\n        friend: {\n          name: 'Bill Gate',\n          age: 18\n        }\n      }, {\n        name: 'Jason B',\n        age: 31,\n        friend: {\n          name: 'Jayden',\n          age: 56\n        }\n      }]\n    };\n\n    _this.onRenderEditableCellHandler = function (cellInfo) {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: function onBlur(e) {\n          var data = _toConsumableArray(_this.state.data);\n\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n          _this.setState({\n            data: data\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: _this.state.data[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        bsStyle: \"danger\",\n        defaultExpanded: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Panel.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Stock Alert\"), React.createElement(Panel.Collapse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Panel.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        componentClass: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Item 1\"), React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Item 2\"), React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"\\u2026\")))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(DataGrid, {\n        data: this.state.data,\n        columns: [{\n          Header: 'Name',\n          accessor: 'name',\n          // String-based value accessors!\n          Cell: this.onRenderEditableCellHandler\n        }, {\n          Header: 'Age',\n          accessor: 'age',\n          Cell: this.onRenderEditableCellHandler // Custom cell components!\n\n        }, {\n          id: 'friendName',\n          // Required because our accessor is not a string\n          Header: 'Friend Name',\n          accessor: function accessor(d) {\n            return d.friend.name;\n          } // Custom value accessors!\n\n        }, {\n          Header: function Header(props) {\n            return React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93\n              },\n              __self: this\n            }, \"Friend Age\");\n          },\n          // Custom header components!\n          accessor: 'friend.age'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Inventory;\n}(Component);\n\nexport default Inventory;","map":{"version":3,"sources":["C:\\Users\\issac\\Documents\\React\\simple-dashboard\\src\\containers\\Inventory\\Inventory.js"],"names":["React","Component","Row","Panel","ListGroup","ListGroupItem","DataGrid","Inventory","state","data","name","age","friend","onRenderEditableCellHandler","cellInfo","backgroundColor","e","index","column","id","target","innerHTML","setState","__html","Header","accessor","Cell","d","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Row, Panel, ListGroup, ListGroupItem } from 'react-bootstrap';\r\n\r\nimport DataGrid from '../../components/Table/DataGrid';\r\n\r\nclass Inventory extends Component {\r\n\r\n    state = {\r\n        data: [{\r\n                name: 'Tanner Linsley',\r\n                age: 26,\r\n                friend: {\r\n                    name: 'Jason Maurer',\r\n                    age: 23,\r\n                }\r\n            },\r\n            {\r\n                name: 'John Doe',\r\n                age: 25,\r\n                friend: {\r\n                    name: 'Bill Gate',\r\n                    age: 18,\r\n                }\r\n            },\r\n            {\r\n                name: 'Jason B',\r\n                age: 31,\r\n                friend: {\r\n                    name: 'Jayden',\r\n                    age: 56,\r\n                }\r\n            }],\r\n    };\r\n\r\n    onRenderEditableCellHandler = (cellInfo) =>{\r\n        return (\r\n            <div\r\n                style={{ backgroundColor: \"#fafafa\" }}\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={e => {\r\n                    const data = [...this.state.data];\r\n                    data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n                    this.setState({ data });\r\n                }}\r\n                dangerouslySetInnerHTML={{\r\n                    __html: this.state.data[cellInfo.index][cellInfo.column.id]\r\n                }}\r\n          />\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Row>\r\n                <Panel bsStyle='danger' defaultExpanded>\r\n                    <Panel.Heading>\r\n                        Stock Alert\r\n                    </Panel.Heading>\r\n                    <Panel.Collapse>\r\n                        <Panel.Body>\r\n                        <ListGroup componentClass=\"ul\">\r\n                            <ListGroupItem>Item 1</ListGroupItem>\r\n                            <ListGroupItem>Item 2</ListGroupItem>\r\n                            <ListGroupItem>&hellip;</ListGroupItem>\r\n                        </ListGroup>\r\n                        </Panel.Body>\r\n                    </Panel.Collapse>\r\n                </Panel>\r\n            </Row>\r\n            <Row>\r\n                <DataGrid data={this.state.data} \r\n                    columns={\r\n                        [\r\n                            {\r\n                                Header: 'Name',\r\n                                accessor: 'name', // String-based value accessors!\r\n                                Cell: this.onRenderEditableCellHandler\r\n                            }, \r\n                            {\r\n                                Header: 'Age',\r\n                                accessor: 'age',\r\n                                Cell: this.onRenderEditableCellHandler // Custom cell components!\r\n                            }, \r\n                            {\r\n                                id: 'friendName', // Required because our accessor is not a string\r\n                                Header: 'Friend Name',\r\n                                accessor: d => d.friend.name // Custom value accessors!\r\n                            }, \r\n                            {\r\n                                Header: props => <span>Friend Age</span>, // Custom header components!\r\n                                accessor: 'friend.age'\r\n                            }\r\n                        ]\r\n                    }\r\n                />\r\n            </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}