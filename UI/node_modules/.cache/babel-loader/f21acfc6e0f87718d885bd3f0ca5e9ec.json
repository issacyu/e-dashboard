{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\issac\\\\Documents\\\\React\\\\simple-dashboard\\\\src\\\\containers\\\\Inventory\\\\Inventory.js\";\nimport React, { Component } from 'react';\nimport DataGrid from '../../components/Table/DataGrid';\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inventory, _Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [{\n        name: 'Tanner Linsley',\n        age: 26,\n        friend: {\n          name: 'Jason Maurer',\n          age: 23\n        }\n      }, {\n        name: 'John Doe',\n        age: 25,\n        friend: {\n          name: 'Bill Gate',\n          age: 18\n        }\n      }, {\n        name: 'Jason B',\n        age: 31,\n        friend: {\n          name: 'Jayden',\n          age: 56\n        }\n      }],\n      columns: [{\n        Header: 'Name',\n        accessor: 'name',\n        // String-based value accessors!\n        Cell: _this.renderEditable\n      }, {\n        Header: 'Age',\n        accessor: 'age',\n        Cell: _this.renderEditable // Custom cell components!\n\n      }, {\n        id: 'friendName',\n        // Required because our accessor is not a string\n        Header: 'Friend Name',\n        accessor: function accessor(d) {\n          return d.friend.name;\n        } // Custom value accessors!\n\n      }, {\n        Header: function Header(props) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, \"Friend Age\");\n        },\n        // Custom header components!\n        accessor: 'friend.age'\n      }]\n    };\n\n    _this.renderEditable = function (cellInfo) {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: function onBlur(e) {\n          var data = _toConsumableArray(_this.state.data);\n\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n          _this.setState({\n            data: data\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: _this.state.data[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DataGrid, {\n        data: this.state.data,\n        columns: [{\n          Header: 'Name',\n          accessor: 'name',\n          // String-based value accessors!\n          Cell: this.renderEditable\n        }, {\n          Header: 'Age',\n          accessor: 'age',\n          Cell: this.renderEditable // Custom cell components!\n\n        }, {\n          id: 'friendName',\n          // Required because our accessor is not a string\n          Header: 'Friend Name',\n          accessor: function accessor(d) {\n            return d.friend.name;\n          } // Custom value accessors!\n\n        }, {\n          Header: function Header(props) {\n            return React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }, \"Friend Age\");\n          },\n          // Custom header components!\n          accessor: 'friend.age'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Inventory;\n}(Component);\n\nexport default Inventory;","map":{"version":3,"sources":["C:\\Users\\issac\\Documents\\React\\simple-dashboard\\src\\containers\\Inventory\\Inventory.js"],"names":["React","Component","DataGrid","Inventory","state","data","name","age","friend","columns","Header","accessor","Cell","renderEditable","id","d","props","cellInfo","backgroundColor","e","index","column","target","innerHTML","setState","__html"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport DataGrid from '../../components/Table/DataGrid';\r\n\r\nclass Inventory extends Component {\r\n\r\n    state = {\r\n        data: [{\r\n                name: 'Tanner Linsley',\r\n                age: 26,\r\n                friend: {\r\n                    name: 'Jason Maurer',\r\n                    age: 23,\r\n                }\r\n            },\r\n            {\r\n                name: 'John Doe',\r\n                age: 25,\r\n                friend: {\r\n                    name: 'Bill Gate',\r\n                    age: 18,\r\n                }\r\n            },\r\n            {\r\n                name: 'Jason B',\r\n                age: 31,\r\n                friend: {\r\n                    name: 'Jayden',\r\n                    age: 56,\r\n                }\r\n            }],\r\n\r\n        columns: [{\r\n            Header: 'Name',\r\n            accessor: 'name', // String-based value accessors!\r\n            Cell: this.renderEditable\r\n          }, {\r\n            Header: 'Age',\r\n            accessor: 'age',\r\n            Cell: this.renderEditable // Custom cell components!\r\n          }, {\r\n            id: 'friendName', // Required because our accessor is not a string\r\n            Header: 'Friend Name',\r\n            accessor: d => d.friend.name // Custom value accessors!\r\n          }, {\r\n            Header: props => <span>Friend Age</span>, // Custom header components!\r\n            accessor: 'friend.age'\r\n          }]\r\n    };\r\n\r\n    renderEditable = (cellInfo) =>{\r\n        return (\r\n            <div\r\n                style={{ backgroundColor: \"#fafafa\" }}\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={e => {\r\n                const data = [...this.state.data];\r\n                data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n                this.setState({ data });\r\n                }}\r\n                dangerouslySetInnerHTML={{\r\n                __html: this.state.data[cellInfo.index][cellInfo.column.id]\r\n                }}\r\n          />\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <DataGrid data={this.state.data} columns={[{\r\n                Header: 'Name',\r\n                accessor: 'name', // String-based value accessors!\r\n                Cell: this.renderEditable\r\n              }, {\r\n                Header: 'Age',\r\n                accessor: 'age',\r\n                Cell: this.renderEditable // Custom cell components!\r\n              }, {\r\n                id: 'friendName', // Required because our accessor is not a string\r\n                Header: 'Friend Name',\r\n                accessor: d => d.friend.name // Custom value accessors!\r\n              }, {\r\n                Header: props => <span>Friend Age</span>, // Custom header components!\r\n                accessor: 'friend.age'\r\n              }]}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}